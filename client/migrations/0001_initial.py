# Generated by Django 4.1.1 on 2022-09-20 04:45

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addressline1', models.CharField(blank=True, max_length=128)),
                ('addressline2', models.CharField(blank=True, max_length=128)),
                ('addressline3', models.CharField(blank=True, max_length=128)),
                ('City', models.CharField(blank=True, max_length=128)),
                ('State', models.CharField(blank=True, max_length=128)),
                ('Country', models.CharField(blank=True, max_length=128)),
                ('Zipcode', models.CharField(blank=True, max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=128)),
                ('last_name', models.CharField(blank=True, max_length=128)),
                ('title', models.CharField(blank=True, max_length=128)),
                ('company', models.CharField(blank=True, max_length=128)),
                ('phone_office', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('phone_cell', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('phone_direct', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('fax', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('email', models.CharField(blank=True, max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Reactor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reactor_name', models.CharField(blank=True, max_length=128)),
                ('tube_id', models.CharField(blank=True, choices=[('INCH', 'INCH'), ('MM', 'MM')], default='INCH', max_length=128, verbose_name='Tube ID')),
                ('is_there_ferrule_insert_in_tube', models.BooleanField(blank=True, choices=[(True, 'yes'), (False, 'No')], default='False', verbose_name='Is there ferrule insert in tube?')),
                ('ferrule_length', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('ferrule_id', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('tube_material_of_tubes', models.PositiveIntegerField(blank=True, null=True, verbose_name='Number of Tubes')),
                ('tube_material_of_raws', models.PositiveIntegerField(blank=True, null=True, verbose_name='Number of Raws')),
                ('tube_material_of_thermo', models.PositiveIntegerField(blank=True, null=True, verbose_name='Number of Thermo')),
                ('tube_material_of_supports', models.PositiveIntegerField(blank=True, null=True, verbose_name='Number of Supports')),
                ('tube_material_of_plugs', models.PositiveIntegerField(blank=True, null=True, verbose_name='Number of Plugs')),
                ('tube_material_of_coolent_tubes', models.PositiveIntegerField(blank=True, null=True, verbose_name='Number of coolant Tubes')),
                ('tube_spacing_or_pitch', models.CharField(blank=True, choices=[('INCH', 'INCH'), ('MM', 'MM')], max_length=128, verbose_name='Tube Spacing Or Pitch')),
                ('total_tube_length', models.CharField(blank=True, choices=[('INCH', 'INCH'), ('MM', 'MM')], default='INCH', max_length=128, verbose_name='Total Tube Length')),
                ('top_tube_sheet_thickness', models.CharField(blank=True, choices=[('INCH', 'INCH'), ('MM', 'MM')], default='INCH', max_length=128, verbose_name='Top Tube sheet Thickness')),
                ('bottom_tube_sheet_thickness', models.CharField(blank=True, choices=[('INCH', 'INCH'), ('MM', 'MM')], default='INCH', max_length=128, verbose_name='Bottom Tube Sheet Thickness')),
                ('tube_protude_out_of_top_tube_sheet', models.BooleanField(blank=True, choices=[(True, 'yes'), (False, 'No')], default='False', verbose_name='Tube Protude Out Of Top Tube Sheet')),
                ('tube_protude_out_of_bottom_tube_sheet', models.BooleanField(blank=True, choices=[(True, 'yes'), (False, 'No')], default='False', verbose_name='Tube Protude Out Of Bottom Tube Sheet')),
                ('top_dome_removable', models.BooleanField(blank=True, choices=[(True, 'yes'), (False, 'No')], default='False', verbose_name='Top Dom Removable')),
                ('top_inlet_accessible', models.BooleanField(blank=True, choices=[(True, 'yes'), (False, 'No')], default='False', verbose_name='Top Inlet Accessible')),
                ('top_inlet_impingment_plate', models.BooleanField(blank=True, choices=[(True, 'yes'), (False, 'No')], default='False', verbose_name='Top Inlet Impingment Plate')),
                ('any_projections_on_tube_sheet_describe', models.CharField(blank=True, max_length=128, verbose_name='Any projections on tube sheet-describe')),
                ('tube_sheet_material', models.CharField(blank=True, max_length=128, verbose_name='Tube Sheet Material')),
                ('dom_material', models.CharField(blank=True, max_length=128, validators=[django.core.validators.MaxLengthValidator(200)], verbose_name='Dom Material')),
                ('tube_spacing_proof_document', models.FileField(blank=True, null=True, upload_to='document/', verbose_name='Tube Spacing Proof Document')),
                ('reactor_tube_sheet_drawings', models.FileField(blank=True, null=True, upload_to='images/', verbose_name='Reactor Tube Sheet Drawings')),
                ('reactor_elevation_view_drawings', models.FileField(blank=True, null=True, upload_to='images/', verbose_name='Reactor Elevation View Drawings')),
                ('other_drawings', models.FileField(blank=True, null=True, upload_to='images/', verbose_name='Other Drawings')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_the_unit', models.CharField(blank=True, max_length=128)),
                ('chemical_being_manufactured_by_this_unit', models.CharField(blank=True, max_length=128)),
                ('reactor_per_each_unit', models.ManyToManyField(to='client.reactor')),
            ],
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plant_location', models.CharField(blank=True, max_length=128)),
                ('plant_contact', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('no_of_unit', models.ManyToManyField(to='client.unit')),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('official_name', models.CharField(max_length=128, verbose_name='Client Name')),
                ('comman_name', models.CharField(blank=True, max_length=128)),
                ('alternate_name', models.CharField(blank=True, max_length=128)),
                ('key_contact', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('parent_company', models.CharField(blank=True, max_length=128)),
                ('former_name', models.CharField(blank=True, max_length=128)),
                ('contact_person', models.ManyToManyField(to='client.contact')),
                ('no_of_unit', models.ManyToManyField(to='client.unit')),
                ('official_address', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='official_address', to='client.address')),
                ('plant', models.ManyToManyField(to='client.plant')),
                ('plantentrance_address', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='plantentrance_address', to='client.address')),
                ('reactor_per_each_unit', models.ManyToManyField(to='client.reactor')),
                ('shipping_address', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='shipping_address', to='client.address')),
            ],
        ),
    ]
